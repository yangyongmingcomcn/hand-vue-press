(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{343:function(v,_,i){"use strict";i.r(_);var l=i(6),t=Object(l.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"前端自测、提交、分支管理规范"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前端自测、提交、分支管理规范"}},[v._v("#")]),v._v(" 前端自测、提交、分支管理规范")]),v._v(" "),_("h2",{attrs:{id:"_1、自测"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1、自测"}},[v._v("#")]),v._v(" 1、自测")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("本地环境")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("在本地开发时，请检查ESLint插件是否安装并启用。（必装插件：ESLint、Prettier）。")])]),v._v(" "),_("li",[_("p",[v._v("本地开发完成在推到dev前，要保证功能的完整性，不要开发了一半，页面都报错，就合并到op环境。")])]),v._v(" "),_("li",[_("p",[v._v("不允许将console，debugger，本地联调相关注释的代码提交至仓库。")])]),v._v(" "),_("li",[_("p",[v._v("在推代码需要通过eslint检测工具，请不要强行通过检测。也不要一通不过lint就使用lint忽略。")])]),v._v(" "),_("li",[_("p",[v._v("本地要测试相关lov是否可以显示数据，下拉列表是否拥有数据等。")])]),v._v(" "),_("li",[_("p",[v._v("所有与后端发生交互的操作，loading是否正常。")])]),v._v(" "),_("li",[_("p",[v._v("不需要使用authorized参数的页面路由配置，删除authorized参数。")])])])]),v._v(" "),_("li",[_("p",[v._v("op环境")]),v._v(" "),_("p",[v._v("op环境需要开发人员确认如下几个点，在开发环境自测结束后，才可以通知测试人员进行测试，前端务必把控质量，可以减少bug数量。")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("菜单数据是否已经维护。")])]),v._v(" "),_("li",[_("p",[v._v("页面是否可以打开，不报403。")])]),v._v(" "),_("li",[_("p",[v._v("请求接口是否同步更新到dev，需要确定接口可以正常调用。")])]),v._v(" "),_("li",[_("p",[v._v("页面逻辑要自测，弹出框、按钮、导出、引入、显示隐藏等页面效果。")])]),v._v(" "),_("li",[_("p",[v._v("页面table，Form表单，按钮等loading状态是否正常。")])]),v._v(" "),_("li",[_("p",[v._v("数据逻辑要进行自测、增删改查以及其他业务逻辑要基本自测。")])]),v._v(" "),_("li",[_("p",[v._v("要测试相关lov是否可以显示数据，下拉列表是否拥有数据等。")])]),v._v(" "),_("li",[_("p",[v._v("二开模块，需要登录对应账号，然后查看self接口中tenantNum是否是二开的名称。")])]),v._v(" "),_("li",[_("p",[v._v("二开模块，需要登录对应账号，查看二开功能是否可以正常访问以及使用。")])])])])]),v._v(" "),_("h2",{attrs:{id:"_2、提交"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2、提交"}},[v._v("#")]),v._v(" 2、提交")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("提交信息")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("feat：新增或者修改")])]),v._v(" "),_("li",[_("p",[v._v("fix： bug修复")])]),v._v(" "),_("li",[_("p",[v._v("build：主要目的是修改项目构建系统(例如 glup，webpack，rollup 的配置等)的提交")])]),v._v(" "),_("li",[_("p",[v._v("ci：主要目的是修改项目继续集成流程(例如 Travis，Jenkins，GitLab CI，Circle等)的提交")])]),v._v(" "),_("li",[_("p",[v._v("docs：文档更新")])]),v._v(" "),_("li",[_("p",[v._v("perf：性能优化")])]),v._v(" "),_("li",[_("p",[v._v("refactor：重构代码(既没有新增功能，也没有修复 bug)")])]),v._v(" "),_("li",[_("p",[v._v("style：不影响程序逻辑的代码修改(修改空白字符，补全缺失的分号等)")])]),v._v(" "),_("li",[_("p",[v._v("test：新增测试用例或是更新现有测试")])]),v._v(" "),_("li",[_("p",[v._v("revert：回滚某个更早之前的提交")])]),v._v(" "),_("li",[_("p",[v._v("chore：不属于以上类型的其他类型")])])])]),v._v(" "),_("li",[_("p",[v._v("提交格式")]),v._v(" "),_("p",[v._v("feat + : + 空格 + 功能名称。例如 feat: 增加子账户权限页面。")]),v._v(" "),_("p",[v._v("fix + : + 空格 + 修复内容。例如 fix: 修复子账户管理页面调用接口接口参数传递错误的bug。")])])]),v._v(" "),_("h2",{attrs:{id:"_3、分支管理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3、分支管理"}},[v._v("#")]),v._v(" 3、分支管理")]),v._v(" "),_("ul",[_("li",[v._v("分支创建")])]),v._v(" "),_("p",[v._v("feature-opd-任务编号:")]),v._v(" "),_("p",[v._v("请以 feature + opd + 任务编号 来创建分支，每次开发单个功能后，进行分支登记记录，可以在开发功能的猪齿鱼的每日工作记录中进行登记，或者在本地进行记录。一个功能一个分支，当前功能提测发正式后，删除功能分支。")]),v._v(" "),_("p",[v._v("hotfix-opd-任务编号:")]),v._v(" "),_("p",[v._v("bug修复分支，请以 hotfix + opd + 任务编号 来创建分支，同样修改完bug提测测试通过后，删除此分支。")])])}),[],!1,null,null,null);_.default=t.exports}}]);