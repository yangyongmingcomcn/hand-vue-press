(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{269:function(t,s,n){t.exports=n.p+"assets/img/front-debugging-1.c95b54fb.png"},270:function(t,s,n){t.exports=n.p+"assets/img/front-debugging-2.3c18362c.png"},271:function(t,s,n){t.exports=n.p+"assets/img/front-debugging-3.d955ee4e.png"},272:function(t,s,n){t.exports=n.p+"assets/img/front-debugging-4.5d837488.png"},273:function(t,s,n){t.exports=n.p+"assets/img/front-debugging-5.d48e41f5.png"},274:function(t,s,n){t.exports=n.p+"assets/img/front-debugging-6.cbb8d51e.png"},275:function(t,s,n){t.exports=n.p+"assets/img/front-debugging-7.87bc8663.png"},276:function(t,s,n){t.exports=n.p+"assets/img/front-debugging-8.66f4bb5e.png"},277:function(t,s,n){t.exports=n.p+"assets/img/front-debugging-9.920c338c.png"},278:function(t,s,n){t.exports=n.p+"assets/img/front-debugging-10.c87e6542.png"},339:function(t,s,n){"use strict";n.r(s);var e=n(6),o=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"一、chrome基础调试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、chrome基础调试"}},[t._v("#")]),t._v(" 一、Chrome基础调试")]),t._v(" "),s("p",[t._v("chrome开发者工具最常用的四个功能模块\n"),s("img",{attrs:{src:n(269),alt:"front-debugging-1"}})]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Elements")]),t._v("：主要用来查看前面界面的html的Dom结构，和修改css的样式。css可以即时修改，即时显示。大大方便了开发者调试页面")]),t._v(" "),s("li",[s("strong",[t._v("Console")]),t._v("：这个除了查看错误信息、打印调试信息(console.log())、写一些测试脚本以外，还可以当作Javascript API查看用。例如我想查看console都有哪些方法和属性，我可以直接在Console中输入”console”并执行")]),t._v(" "),s("li",[s("strong",[t._v("Sources")]),t._v("：主要用来调试js和查看源代码")]),t._v(" "),s("li",[s("strong",[t._v("Network")]),t._v("：前后端请求交互，http超文本传输协议")])]),t._v(" "),s("h2",{attrs:{id:"_1、css调试-element源码定位"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、css调试-element源码定位"}},[t._v("#")]),t._v(" 1、css调试（Element源码定位）")]),t._v(" "),s("p",[t._v("（1）打开测试工具，点击箭头，在页面中选择要审查的元素，此时会定位在代码块，会有html及css布局的展示，可进行动态更改排查问题")]),t._v(" "),s("p",[t._v("（2）"),s("strong",[t._v("伪类调试")]),t._v("--一般情况是看不到的，需要勾选")]),t._v(" "),s("p",[t._v("​\t\t"),s("img",{attrs:{src:n(270),alt:"front-debugging-1"}})]),t._v(" "),s("p",[t._v("（3）"),s("strong",[t._v("$0")]),t._v("--浏览器开发者工具当前选中的元素")]),t._v(" "),s("p",[t._v("​\t\t第一步，我们F12打开开发者工具")]),t._v(" "),s("p",[t._v("​\t\t第二步，我们在元素面板中随便选中一个元素，看看元素尾部这个$0")]),t._v(" "),s("p",[t._v("​\t\t第三步，我们在Console控制台去输入这个$0，并回车，就可以获取这个dom元素了。能获取dom元素，自然就能修改dom元素")]),t._v(" "),s("p",[t._v("​\t\t"),s("img",{attrs:{src:n(271),alt:"front-debugging-1"}})]),t._v(" "),s("p",[t._v("​\t\t"),s("img",{attrs:{src:n(272),alt:"front-debugging-1"}})]),t._v(" "),s("h2",{attrs:{id:"_2、console控制面板使用、debugger"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、console控制面板使用、debugger"}},[t._v("#")]),t._v(" 2、console控制面板使用、debugger")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("控制台或代码中善用console，它会清晰的打印出我们在执行中数据的值，方便查看")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("console.log用于输出普通信息")])]),t._v(" "),s("li",[s("p",[t._v("console.info用于输出提示性信息")])]),t._v(" "),s("li",[s("p",[t._v("console.error 用于输出错误信息")])]),t._v(" "),s("li",[s("p",[t._v("console.warn 用于输出警示信息")])]),t._v(" "),s("li",[s("p",[t._v("console.debug 用于输出调试信息")])]),t._v(" "),s("li",[s("p",[t._v("console.count 用于记录代码执行几次")])]),t._v(" "),s("li",[s("p",[t._v("keys和values前者返回传入对象所有属性名组成的数据，后者返回所有属性值组成的数据\n"),s("img",{attrs:{src:n(273),alt:"front-debugging-1"}}),t._v(" "),s("img",{attrs:{src:n(274),alt:"front-debugging-1"}}),t._v(" "),s("img",{attrs:{src:n(275),alt:"front-debugging-1"}})])])])]),t._v(" "),s("li",[s("p",[t._v("代码中也可以使用debugger,它会在我们点击功能时在控制台看到数据进行调试")]),t._v(" "),s("p",[t._v("（1）直接根据页面在对应的位置找到源码进行断点设置(眼睛是一直执行下一步逻辑的意思，箭头是继续执行下一个断点，直到结束完成)\n"),s("img",{attrs:{src:n(276),alt:"front-debugging-1"}})]),t._v(" "),s("ul",[s("li",[s("p",[t._v("箭头：停止断点调试")])]),t._v(" "),s("li",[s("p",[t._v("眼睛：不跳入函数中去，继续执行下一行代码（F10）")])]),t._v(" "),s("li",[s("p",[t._v("向下的箭头：跳入函数中去（F11）")])]),t._v(" "),s("li",[s("p",[t._v("向上的箭头：从执行的函数中跳出")])]),t._v(" "),s("li",[s("p",[t._v("带斜杠的图标：禁用所有的断点，不做任何调试")])]),t._v(" "),s("li",[s("p",[t._v("最后一个图标：程序运行时遇到异常时是否中断的开关")])])]),t._v(" "),s("p",[t._v("（2）使用场景（一个同事遇到form表单值更新调试的问题）")]),t._v(" "),s("p",[t._v("​\t\t下图是他的代码，想要去打印最后的更新的数据，在打印完formData(接口返回的数据)，直接return出去不往下走了，他就纠结为啥我页面最新数据一直\t\t打印不出来，我们拿form表单的最新数据为下一行代码的values,在调试的时候，要看完整代码，不清楚数据的来源，调试每一步都log debugger,往下走\t\t排查数据")]),t._v(" "),s("p",[t._v("​\t\t"),s("img",{attrs:{src:n(277),alt:"front-debugging-1"}})])])]),t._v(" "),s("h1",{attrs:{id:"_3、network"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、network"}},[t._v("#")]),t._v(" 3、Network")]),t._v(" "),s("p",[s("img",{attrs:{src:n(278),alt:"front-debugging-1"}}),t._v("\n（1）记录请求资源，即页面加载时接口的记录，当关闭后就不会有请求信息展示")]),t._v(" "),s("p",[t._v("（2）清空请求信息，删除的意思")]),t._v(" "),s("p",[t._v("（3）过滤资源，当点击时下方会出现fillter过滤框，可以筛选请求的URL，定位自己要查看的请求")]),t._v(" "),s("p",[t._v("​\t\t  主要用以上三个")])])}),[],!1,null,null,null);s.default=o.exports}}]);